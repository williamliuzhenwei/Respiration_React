{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { InteractionAction } from '@antv/g2';\n\nvar VennElementState =\n/** @class */\nfunction (_super) {\n  __extends(VennElementState, _super);\n\n  function VennElementState() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** tofront: 同步所有元素的位置  */\n\n\n  VennElementState.prototype.syncElementsPos = function () {\n    var elements = this.context.view.geometries[0].elements;\n    elements.forEach(function (elem) {\n      elem.shape.toFront();\n    });\n  };\n\n  return VennElementState;\n}(InteractionAction);\n\nvar VennElementActive =\n/** @class */\nfunction (_super) {\n  __extends(VennElementActive, _super);\n\n  function VennElementActive() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** hover */\n\n\n  VennElementActive.prototype.active = function () {\n    var data = this.context.event.data.data;\n    var elements = this.context.view.geometries[0].elements;\n    elements.forEach(function (elem) {\n      var activeState = data === elem.getData();\n      elem.setState('active', activeState);\n    }); // tofront: 同步所有元素的位置\n\n    this.syncElementsPos();\n  };\n  /** 重置 */\n\n\n  VennElementActive.prototype.reset = function () {\n    var elements = this.context.view.geometries[0].elements;\n    elements.forEach(function (elem) {\n      // 所有元素的 state 统一 false\n      elem.setState('active', false);\n    }); // tofront: 同步所有元素的位置\n\n    this.syncElementsPos();\n  };\n\n  return VennElementActive;\n}(VennElementState);\n\nexport { VennElementActive };\n\nvar VennElementSelected =\n/** @class */\nfunction (_super) {\n  __extends(VennElementSelected, _super);\n\n  function VennElementSelected() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** 切换 */\n\n\n  VennElementSelected.prototype.toggle = function () {\n    var data = this.context.event.data.data;\n    var elements = this.context.view.geometries[0].elements;\n    elements.forEach(function (elem) {\n      if (data === elem.getData()) {\n        var selectedState = elem.getStates().includes('selected');\n        elem.setState('selected', !selectedState);\n      }\n    }); // tofront: 同步所有元素的位置\n\n    this.syncElementsPos();\n  };\n  /** 重置 */\n\n\n  VennElementSelected.prototype.reset = function () {\n    var elements = this.context.view.geometries[0].elements;\n    elements.forEach(function (elem) {\n      // 所有元素的 state 统一 false\n      elem.setState('selected', false);\n    }); // tofront: 同步所有元素的位置\n\n    this.syncElementsPos();\n  };\n\n  return VennElementSelected;\n}(VennElementState);\n\nexport { VennElementSelected };","map":{"version":3,"sources":["../../../../src/plots/venn/interaction/action.ts"],"names":[],"mappings":"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","sourcesContent":["import { InteractionAction } from '@antv/g2';\n\nclass VennElementState extends InteractionAction {\n  /** tofront: 同步所有元素的位置  */\n  protected syncElementsPos() {\n    const elements = this.context.view.geometries[0].elements;\n    elements.forEach((elem) => {\n      elem.shape.toFront();\n    });\n  }\n}\n\nexport class VennElementActive extends VennElementState {\n  /** hover */\n  public active() {\n    const { data } = this.context.event.data;\n    const elements = this.context.view.geometries[0].elements;\n\n    elements.forEach((elem) => {\n      const activeState = data === elem.getData();\n      elem.setState('active', activeState);\n    });\n    // tofront: 同步所有元素的位置\n    this.syncElementsPos();\n  }\n\n  /** 重置 */\n  public reset() {\n    const elements = this.context.view.geometries[0].elements;\n\n    elements.forEach((elem) => {\n      // 所有元素的 state 统一 false\n      elem.setState('active', false);\n    });\n    // tofront: 同步所有元素的位置\n    this.syncElementsPos();\n  }\n}\n\nexport class VennElementSelected extends VennElementState {\n  /** 切换 */\n  public toggle() {\n    const { data } = this.context.event.data;\n    const elements = this.context.view.geometries[0].elements;\n\n    elements.forEach((elem) => {\n      if (data === elem.getData()) {\n        const selectedState = elem.getStates().includes('selected');\n        elem.setState('selected', !selectedState);\n      }\n    });\n    // tofront: 同步所有元素的位置\n    this.syncElementsPos();\n  }\n\n  /** 重置 */\n  public reset() {\n    const elements = this.context.view.geometries[0].elements;\n\n    elements.forEach((elem) => {\n      // 所有元素的 state 统一 false\n      elem.setState('selected', false);\n    });\n    // tofront: 同步所有元素的位置\n    this.syncElementsPos();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}