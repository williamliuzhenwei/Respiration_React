{"ast":null,"code":"import _classCallCheck from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\n\nvar SingularValueDecomposition = /*#__PURE__*/function () {\n  function SingularValueDecomposition(value) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, SingularValueDecomposition);\n\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    var m = value.rows;\n    var n = value.columns;\n    var _options$computeLeftS = options.computeLeftSingularVectors,\n        computeLeftSingularVectors = _options$computeLeftS === void 0 ? true : _options$computeLeftS,\n        _options$computeRight = options.computeRightSingularVectors,\n        computeRightSingularVectors = _options$computeRight === void 0 ? true : _options$computeRight,\n        _options$autoTranspos = options.autoTranspose,\n        autoTranspose = _options$autoTranspos === void 0 ? false : _options$autoTranspos;\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n    var swapped = false;\n    var a;\n\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone(); // eslint-disable-next-line no-console\n\n        console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Float64Array(ni);\n    var U = new Matrix(m, nu);\n    var V = new Matrix(n, n);\n    var e = new Float64Array(n);\n    var work = new Float64Array(m);\n    var si = new Float64Array(ni);\n\n    for (var i = 0; i < ni; i++) {\n      si[i] = i;\n    }\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n\n    for (var k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n\n        for (var _i = k; _i < m; _i++) {\n          s[k] = hypotenuse(s[k], a.get(_i, k));\n        }\n\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n\n          for (var _i2 = k; _i2 < m; _i2++) {\n            a.set(_i2, k, a.get(_i2, k) / s[k]);\n          }\n\n          a.set(k, k, a.get(k, k) + 1);\n        }\n\n        s[k] = -s[k];\n      }\n\n      for (var j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          var t = 0;\n\n          for (var _i3 = k; _i3 < m; _i3++) {\n            t += a.get(_i3, k) * a.get(_i3, j);\n          }\n\n          t = -t / a.get(k, k);\n\n          for (var _i4 = k; _i4 < m; _i4++) {\n            a.set(_i4, j, a.get(_i4, j) + t * a.get(_i4, k));\n          }\n        }\n\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (var _i5 = k; _i5 < m; _i5++) {\n          U.set(_i5, k, a.get(_i5, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n\n        for (var _i6 = k + 1; _i6 < n; _i6++) {\n          e[k] = hypotenuse(e[k], e[_i6]);\n        }\n\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n\n          for (var _i7 = k + 1; _i7 < n; _i7++) {\n            e[_i7] /= e[k];\n          }\n\n          e[k + 1] += 1;\n        }\n\n        e[k] = -e[k];\n\n        if (k + 1 < m && e[k] !== 0) {\n          for (var _i8 = k + 1; _i8 < m; _i8++) {\n            work[_i8] = 0;\n          }\n\n          for (var _i9 = k + 1; _i9 < m; _i9++) {\n            for (var _j = k + 1; _j < n; _j++) {\n              work[_i9] += e[_j] * a.get(_i9, _j);\n            }\n          }\n\n          for (var _j2 = k + 1; _j2 < n; _j2++) {\n            var _t = -e[_j2] / e[k + 1];\n\n            for (var _i10 = k + 1; _i10 < m; _i10++) {\n              a.set(_i10, _j2, a.get(_i10, _j2) + _t * work[_i10]);\n            }\n          }\n        }\n\n        if (wantv) {\n          for (var _i11 = k + 1; _i11 < n; _i11++) {\n            V.set(_i11, k, e[_i11]);\n          }\n        }\n      }\n    }\n\n    var p = Math.min(n, m + 1);\n\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (var _j3 = nct; _j3 < nu; _j3++) {\n        for (var _i12 = 0; _i12 < m; _i12++) {\n          U.set(_i12, _j3, 0);\n        }\n\n        U.set(_j3, _j3, 1);\n      }\n\n      for (var _k = nct - 1; _k >= 0; _k--) {\n        if (s[_k] !== 0) {\n          for (var _j4 = _k + 1; _j4 < nu; _j4++) {\n            var _t2 = 0;\n\n            for (var _i13 = _k; _i13 < m; _i13++) {\n              _t2 += U.get(_i13, _k) * U.get(_i13, _j4);\n            }\n\n            _t2 = -_t2 / U.get(_k, _k);\n\n            for (var _i14 = _k; _i14 < m; _i14++) {\n              U.set(_i14, _j4, U.get(_i14, _j4) + _t2 * U.get(_i14, _k));\n            }\n          }\n\n          for (var _i15 = _k; _i15 < m; _i15++) {\n            U.set(_i15, _k, -U.get(_i15, _k));\n          }\n\n          U.set(_k, _k, 1 + U.get(_k, _k));\n\n          for (var _i16 = 0; _i16 < _k - 1; _i16++) {\n            U.set(_i16, _k, 0);\n          }\n        } else {\n          for (var _i17 = 0; _i17 < m; _i17++) {\n            U.set(_i17, _k, 0);\n          }\n\n          U.set(_k, _k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (var _k2 = n - 1; _k2 >= 0; _k2--) {\n        if (_k2 < nrt && e[_k2] !== 0) {\n          for (var _j5 = _k2 + 1; _j5 < n; _j5++) {\n            var _t3 = 0;\n\n            for (var _i18 = _k2 + 1; _i18 < n; _i18++) {\n              _t3 += V.get(_i18, _k2) * V.get(_i18, _j5);\n            }\n\n            _t3 = -_t3 / V.get(_k2 + 1, _k2);\n\n            for (var _i19 = _k2 + 1; _i19 < n; _i19++) {\n              V.set(_i19, _j5, V.get(_i19, _j5) + _t3 * V.get(_i19, _k2));\n            }\n          }\n        }\n\n        for (var _i20 = 0; _i20 < n; _i20++) {\n          V.set(_i20, _k2, 0);\n        }\n\n        V.set(_k2, _k2, 1);\n      }\n    }\n\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n\n    while (p > 0) {\n      var _k3 = void 0,\n          kase = void 0;\n\n      for (_k3 = p - 2; _k3 >= -1; _k3--) {\n        if (_k3 === -1) {\n          break;\n        }\n\n        var alpha = Number.MIN_VALUE + eps * Math.abs(s[_k3] + Math.abs(s[_k3 + 1]));\n\n        if (Math.abs(e[_k3]) <= alpha || Number.isNaN(e[_k3])) {\n          e[_k3] = 0;\n          break;\n        }\n      }\n\n      if (_k3 === p - 2) {\n        kase = 4;\n      } else {\n        var ks = void 0;\n\n        for (ks = p - 1; ks >= _k3; ks--) {\n          if (ks === _k3) {\n            break;\n          }\n\n          var _t4 = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== _k3 + 1 ? Math.abs(e[ks - 1]) : 0);\n\n          if (Math.abs(s[ks]) <= eps * _t4) {\n            s[ks] = 0;\n            break;\n          }\n        }\n\n        if (ks === _k3) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          _k3 = ks;\n        }\n      }\n\n      _k3++;\n\n      switch (kase) {\n        case 1:\n          {\n            var f = e[p - 2];\n            e[p - 2] = 0;\n\n            for (var _j6 = p - 2; _j6 >= _k3; _j6--) {\n              var _t5 = hypotenuse(s[_j6], f);\n\n              var cs = s[_j6] / _t5;\n              var sn = f / _t5;\n              s[_j6] = _t5;\n\n              if (_j6 !== _k3) {\n                f = -sn * e[_j6 - 1];\n                e[_j6 - 1] = cs * e[_j6 - 1];\n              }\n\n              if (wantv) {\n                for (var _i21 = 0; _i21 < n; _i21++) {\n                  _t5 = cs * V.get(_i21, _j6) + sn * V.get(_i21, p - 1);\n                  V.set(_i21, p - 1, -sn * V.get(_i21, _j6) + cs * V.get(_i21, p - 1));\n                  V.set(_i21, _j6, _t5);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 2:\n          {\n            var _f = e[_k3 - 1];\n            e[_k3 - 1] = 0;\n\n            for (var _j7 = _k3; _j7 < p; _j7++) {\n              var _t6 = hypotenuse(s[_j7], _f);\n\n              var _cs = s[_j7] / _t6;\n\n              var _sn = _f / _t6;\n\n              s[_j7] = _t6;\n              _f = -_sn * e[_j7];\n              e[_j7] = _cs * e[_j7];\n\n              if (wantu) {\n                for (var _i22 = 0; _i22 < m; _i22++) {\n                  _t6 = _cs * U.get(_i22, _j7) + _sn * U.get(_i22, _k3 - 1);\n                  U.set(_i22, _k3 - 1, -_sn * U.get(_i22, _j7) + _cs * U.get(_i22, _k3 - 1));\n                  U.set(_i22, _j7, _t6);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 3:\n          {\n            var scale = Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2]), Math.abs(e[p - 2]), Math.abs(s[_k3]), Math.abs(e[_k3]));\n            var sp = s[p - 1] / scale;\n            var spm1 = s[p - 2] / scale;\n            var epm1 = e[p - 2] / scale;\n            var sk = s[_k3] / scale;\n            var ek = e[_k3] / scale;\n            var b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n            var c = sp * epm1 * (sp * epm1);\n            var shift = 0;\n\n            if (b !== 0 || c !== 0) {\n              if (b < 0) {\n                shift = 0 - Math.sqrt(b * b + c);\n              } else {\n                shift = Math.sqrt(b * b + c);\n              }\n\n              shift = c / (b + shift);\n            }\n\n            var _f2 = (sk + sp) * (sk - sp) + shift;\n\n            var g = sk * ek;\n\n            for (var _j8 = _k3; _j8 < p - 1; _j8++) {\n              var _t7 = hypotenuse(_f2, g);\n\n              if (_t7 === 0) _t7 = Number.MIN_VALUE;\n\n              var _cs2 = _f2 / _t7;\n\n              var _sn2 = g / _t7;\n\n              if (_j8 !== _k3) {\n                e[_j8 - 1] = _t7;\n              }\n\n              _f2 = _cs2 * s[_j8] + _sn2 * e[_j8];\n              e[_j8] = _cs2 * e[_j8] - _sn2 * s[_j8];\n              g = _sn2 * s[_j8 + 1];\n              s[_j8 + 1] = _cs2 * s[_j8 + 1];\n\n              if (wantv) {\n                for (var _i23 = 0; _i23 < n; _i23++) {\n                  _t7 = _cs2 * V.get(_i23, _j8) + _sn2 * V.get(_i23, _j8 + 1);\n                  V.set(_i23, _j8 + 1, -_sn2 * V.get(_i23, _j8) + _cs2 * V.get(_i23, _j8 + 1));\n                  V.set(_i23, _j8, _t7);\n                }\n              }\n\n              _t7 = hypotenuse(_f2, g);\n              if (_t7 === 0) _t7 = Number.MIN_VALUE;\n              _cs2 = _f2 / _t7;\n              _sn2 = g / _t7;\n              s[_j8] = _t7;\n              _f2 = _cs2 * e[_j8] + _sn2 * s[_j8 + 1];\n              s[_j8 + 1] = -_sn2 * e[_j8] + _cs2 * s[_j8 + 1];\n              g = _sn2 * e[_j8 + 1];\n              e[_j8 + 1] = _cs2 * e[_j8 + 1];\n\n              if (wantu && _j8 < m - 1) {\n                for (var _i24 = 0; _i24 < m; _i24++) {\n                  _t7 = _cs2 * U.get(_i24, _j8) + _sn2 * U.get(_i24, _j8 + 1);\n                  U.set(_i24, _j8 + 1, -_sn2 * U.get(_i24, _j8) + _cs2 * U.get(_i24, _j8 + 1));\n                  U.set(_i24, _j8, _t7);\n                }\n              }\n            }\n\n            e[p - 2] = _f2;\n            iter = iter + 1;\n            break;\n          }\n\n        case 4:\n          {\n            if (s[_k3] <= 0) {\n              s[_k3] = s[_k3] < 0 ? -s[_k3] : 0;\n\n              if (wantv) {\n                for (var _i25 = 0; _i25 <= pp; _i25++) {\n                  V.set(_i25, _k3, -V.get(_i25, _k3));\n                }\n              }\n            }\n\n            while (_k3 < pp) {\n              if (s[_k3] >= s[_k3 + 1]) {\n                break;\n              }\n\n              var _t8 = s[_k3];\n              s[_k3] = s[_k3 + 1];\n              s[_k3 + 1] = _t8;\n\n              if (wantv && _k3 < n - 1) {\n                for (var _i26 = 0; _i26 < n; _i26++) {\n                  _t8 = V.get(_i26, _k3 + 1);\n                  V.set(_i26, _k3 + 1, V.get(_i26, _k3));\n                  V.set(_i26, _k3, _t8);\n                }\n              }\n\n              if (wantu && _k3 < m - 1) {\n                for (var _i27 = 0; _i27 < m; _i27++) {\n                  _t8 = U.get(_i27, _k3 + 1);\n                  U.set(_i27, _k3 + 1, U.get(_i27, _k3));\n                  U.set(_i27, _k3, _t8);\n                }\n              }\n\n              _k3++;\n            }\n\n            iter = 0;\n            p--;\n            break;\n          }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  _createClass(SingularValueDecomposition, [{\n    key: \"solve\",\n    value: function solve(value) {\n      var Y = value;\n      var e = this.threshold;\n      var scols = this.s.length;\n      var Ls = Matrix.zeros(scols, scols);\n\n      for (var i = 0; i < scols; i++) {\n        if (Math.abs(this.s[i]) <= e) {\n          Ls.set(i, i, 0);\n        } else {\n          Ls.set(i, i, 1 / this.s[i]);\n        }\n      }\n\n      var U = this.U;\n      var V = this.rightSingularVectors;\n      var VL = V.mmul(Ls);\n      var vrows = V.rows;\n      var urows = U.rows;\n      var VLU = Matrix.zeros(vrows, urows);\n\n      for (var _i28 = 0; _i28 < vrows; _i28++) {\n        for (var j = 0; j < urows; j++) {\n          var sum = 0;\n\n          for (var k = 0; k < scols; k++) {\n            sum += VL.get(_i28, k) * U.get(j, k);\n          }\n\n          VLU.set(_i28, j, sum);\n        }\n      }\n\n      return VLU.mmul(Y);\n    }\n  }, {\n    key: \"solveForDiagonal\",\n    value: function solveForDiagonal(value) {\n      return this.solve(Matrix.diag(value));\n    }\n  }, {\n    key: \"inverse\",\n    value: function inverse() {\n      var V = this.V;\n      var e = this.threshold;\n      var vrows = V.rows;\n      var vcols = V.columns;\n      var X = new Matrix(vrows, this.s.length);\n\n      for (var i = 0; i < vrows; i++) {\n        for (var j = 0; j < vcols; j++) {\n          if (Math.abs(this.s[j]) > e) {\n            X.set(i, j, V.get(i, j) / this.s[j]);\n          }\n        }\n      }\n\n      var U = this.U;\n      var urows = U.rows;\n      var ucols = U.columns;\n      var Y = new Matrix(vrows, urows);\n\n      for (var _i29 = 0; _i29 < vrows; _i29++) {\n        for (var _j9 = 0; _j9 < urows; _j9++) {\n          var sum = 0;\n\n          for (var k = 0; k < ucols; k++) {\n            sum += X.get(_i29, k) * U.get(_j9, k);\n          }\n\n          Y.set(_i29, _j9, sum);\n        }\n      }\n\n      return Y;\n    }\n  }, {\n    key: \"condition\",\n    get: function get() {\n      return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    }\n  }, {\n    key: \"norm2\",\n    get: function get() {\n      return this.s[0];\n    }\n  }, {\n    key: \"rank\",\n    get: function get() {\n      var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n      var r = 0;\n      var s = this.s;\n\n      for (var i = 0, ii = s.length; i < ii; i++) {\n        if (s[i] > tol) {\n          r++;\n        }\n      }\n\n      return r;\n    }\n  }, {\n    key: \"diagonal\",\n    get: function get() {\n      return Array.from(this.s);\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n    }\n  }, {\n    key: \"leftSingularVectors\",\n    get: function get() {\n      return this.U;\n    }\n  }, {\n    key: \"rightSingularVectors\",\n    get: function get() {\n      return this.V;\n    }\n  }, {\n    key: \"diagonalMatrix\",\n    get: function get() {\n      return Matrix.diag(this.s);\n    }\n  }]);\n\n  return SingularValueDecomposition;\n}();\n\nexport { SingularValueDecomposition as default };","map":{"version":3,"sources":["/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/ml-matrix/src/dc/svd.js"],"names":["Matrix","WrapperMatrix2D","hypotenuse","SingularValueDecomposition","value","options","checkMatrix","isEmpty","Error","m","rows","n","columns","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","a","clone","console","warn","transpose","aux","nu","Math","min","ni","s","Float64Array","U","V","e","work","si","i","nct","nrt","max","mrc","k","get","set","j","t","p","pp","iter","eps","Number","EPSILON","kase","alpha","MIN_VALUE","abs","isNaN","ks","f","cs","sn","scale","sp","spm1","epm1","sk","ek","b","c","shift","sqrt","g","tmp","Y","threshold","scols","length","Ls","zeros","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","X","ucols","tol","r","ii","Array","from"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,SAASC,UAAT,QAA2B,QAA3B;;IAEqBC,0B;AACnB,sCAAYC,KAAZ,EAAiC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AAC/BD,IAAAA,KAAK,GAAGH,eAAe,CAACK,WAAhB,CAA4BF,KAA5B,CAAR;;AAEA,QAAIA,KAAK,CAACG,OAAN,EAAJ,EAAqB;AACnB,YAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,QAAIC,CAAC,GAAGL,KAAK,CAACM,IAAd;AACA,QAAIC,CAAC,GAAGP,KAAK,CAACQ,OAAd;AAEA,gCAIIP,OAJJ,CACEQ,0BADF;AAAA,QACEA,0BADF,sCAC+B,IAD/B;AAAA,gCAIIR,OAJJ,CAEES,2BAFF;AAAA,QAEEA,2BAFF,sCAEgC,IAFhC;AAAA,gCAIIT,OAJJ,CAGEU,aAHF;AAAA,QAGEA,aAHF,sCAGkB,KAHlB;AAMA,QAAIC,KAAK,GAAGC,OAAO,CAACJ,0BAAD,CAAnB;AACA,QAAIK,KAAK,GAAGD,OAAO,CAACH,2BAAD,CAAnB;AAEA,QAAIK,OAAO,GAAG,KAAd;AACA,QAAIC,CAAJ;;AACA,QAAIX,CAAC,GAAGE,CAAR,EAAW;AACT,UAAI,CAACI,aAAL,EAAoB;AAClBK,QAAAA,CAAC,GAAGhB,KAAK,CAACiB,KAAN,EAAJ,CADkB,CAElB;;AACAC,QAAAA,OAAO,CAACC,IAAR,CACE,wFADF;AAGD,OAND,MAMO;AACLH,QAAAA,CAAC,GAAGhB,KAAK,CAACoB,SAAN,EAAJ;AACAf,QAAAA,CAAC,GAAGW,CAAC,CAACV,IAAN;AACAC,QAAAA,CAAC,GAAGS,CAAC,CAACR,OAAN;AACAO,QAAAA,OAAO,GAAG,IAAV;AACA,YAAIM,GAAG,GAAGT,KAAV;AACAA,QAAAA,KAAK,GAAGE,KAAR;AACAA,QAAAA,KAAK,GAAGO,GAAR;AACD;AACF,KAhBD,MAgBO;AACLL,MAAAA,CAAC,GAAGhB,KAAK,CAACiB,KAAN,EAAJ;AACD;;AAED,QAAIK,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASnB,CAAT,EAAYE,CAAZ,CAAT;AACA,QAAIkB,EAAE,GAAGF,IAAI,CAACC,GAAL,CAASnB,CAAC,GAAG,CAAb,EAAgBE,CAAhB,CAAT;AACA,QAAImB,CAAC,GAAG,IAAIC,YAAJ,CAAiBF,EAAjB,CAAR;AACA,QAAIG,CAAC,GAAG,IAAIhC,MAAJ,CAAWS,CAAX,EAAciB,EAAd,CAAR;AACA,QAAIO,CAAC,GAAG,IAAIjC,MAAJ,CAAWW,CAAX,EAAcA,CAAd,CAAR;AAEA,QAAIuB,CAAC,GAAG,IAAIH,YAAJ,CAAiBpB,CAAjB,CAAR;AACA,QAAIwB,IAAI,GAAG,IAAIJ,YAAJ,CAAiBtB,CAAjB,CAAX;AAEA,QAAI2B,EAAE,GAAG,IAAIL,YAAJ,CAAiBF,EAAjB,CAAT;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,EAApB,EAAwBQ,CAAC,EAAzB;AAA6BD,MAAAA,EAAE,CAACC,CAAD,CAAF,GAAQA,CAAR;AAA7B;;AAEA,QAAIC,GAAG,GAAGX,IAAI,CAACC,GAAL,CAASnB,CAAC,GAAG,CAAb,EAAgBE,CAAhB,CAAV;AACA,QAAI4B,GAAG,GAAGZ,IAAI,CAACa,GAAL,CAAS,CAAT,EAAYb,IAAI,CAACC,GAAL,CAASjB,CAAC,GAAG,CAAb,EAAgBF,CAAhB,CAAZ,CAAV;AACA,QAAIgC,GAAG,GAAGd,IAAI,CAACa,GAAL,CAASF,GAAT,EAAcC,GAAd,CAAV;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyBC,CAAC,EAA1B,EAA8B;AAC5B,UAAIA,CAAC,GAAGJ,GAAR,EAAa;AACXR,QAAAA,CAAC,CAACY,CAAD,CAAD,GAAO,CAAP;;AACA,aAAK,IAAIL,EAAC,GAAGK,CAAb,EAAgBL,EAAC,GAAG5B,CAApB,EAAuB4B,EAAC,EAAxB,EAA4B;AAC1BP,UAAAA,CAAC,CAACY,CAAD,CAAD,GAAOxC,UAAU,CAAC4B,CAAC,CAACY,CAAD,CAAF,EAAOtB,CAAC,CAACuB,GAAF,CAAMN,EAAN,EAASK,CAAT,CAAP,CAAjB;AACD;;AACD,YAAIZ,CAAC,CAACY,CAAD,CAAD,KAAS,CAAb,EAAgB;AACd,cAAItB,CAAC,CAACuB,GAAF,CAAMD,CAAN,EAASA,CAAT,IAAc,CAAlB,EAAqB;AACnBZ,YAAAA,CAAC,CAACY,CAAD,CAAD,GAAO,CAACZ,CAAC,CAACY,CAAD,CAAT;AACD;;AACD,eAAK,IAAIL,GAAC,GAAGK,CAAb,EAAgBL,GAAC,GAAG5B,CAApB,EAAuB4B,GAAC,EAAxB,EAA4B;AAC1BjB,YAAAA,CAAC,CAACwB,GAAF,CAAMP,GAAN,EAASK,CAAT,EAAYtB,CAAC,CAACuB,GAAF,CAAMN,GAAN,EAASK,CAAT,IAAcZ,CAAC,CAACY,CAAD,CAA3B;AACD;;AACDtB,UAAAA,CAAC,CAACwB,GAAF,CAAMF,CAAN,EAASA,CAAT,EAAYtB,CAAC,CAACuB,GAAF,CAAMD,CAAN,EAASA,CAAT,IAAc,CAA1B;AACD;;AACDZ,QAAAA,CAAC,CAACY,CAAD,CAAD,GAAO,CAACZ,CAAC,CAACY,CAAD,CAAT;AACD;;AAED,WAAK,IAAIG,CAAC,GAAGH,CAAC,GAAG,CAAjB,EAAoBG,CAAC,GAAGlC,CAAxB,EAA2BkC,CAAC,EAA5B,EAAgC;AAC9B,YAAIH,CAAC,GAAGJ,GAAJ,IAAWR,CAAC,CAACY,CAAD,CAAD,KAAS,CAAxB,EAA2B;AACzB,cAAII,CAAC,GAAG,CAAR;;AACA,eAAK,IAAIT,GAAC,GAAGK,CAAb,EAAgBL,GAAC,GAAG5B,CAApB,EAAuB4B,GAAC,EAAxB,EAA4B;AAC1BS,YAAAA,CAAC,IAAI1B,CAAC,CAACuB,GAAF,CAAMN,GAAN,EAASK,CAAT,IAActB,CAAC,CAACuB,GAAF,CAAMN,GAAN,EAASQ,CAAT,CAAnB;AACD;;AACDC,UAAAA,CAAC,GAAG,CAACA,CAAD,GAAK1B,CAAC,CAACuB,GAAF,CAAMD,CAAN,EAASA,CAAT,CAAT;;AACA,eAAK,IAAIL,GAAC,GAAGK,CAAb,EAAgBL,GAAC,GAAG5B,CAApB,EAAuB4B,GAAC,EAAxB,EAA4B;AAC1BjB,YAAAA,CAAC,CAACwB,GAAF,CAAMP,GAAN,EAASQ,CAAT,EAAYzB,CAAC,CAACuB,GAAF,CAAMN,GAAN,EAASQ,CAAT,IAAcC,CAAC,GAAG1B,CAAC,CAACuB,GAAF,CAAMN,GAAN,EAASK,CAAT,CAA9B;AACD;AACF;;AACDR,QAAAA,CAAC,CAACW,CAAD,CAAD,GAAOzB,CAAC,CAACuB,GAAF,CAAMD,CAAN,EAASG,CAAT,CAAP;AACD;;AAED,UAAI7B,KAAK,IAAI0B,CAAC,GAAGJ,GAAjB,EAAsB;AACpB,aAAK,IAAID,GAAC,GAAGK,CAAb,EAAgBL,GAAC,GAAG5B,CAApB,EAAuB4B,GAAC,EAAxB,EAA4B;AAC1BL,UAAAA,CAAC,CAACY,GAAF,CAAMP,GAAN,EAASK,CAAT,EAAYtB,CAAC,CAACuB,GAAF,CAAMN,GAAN,EAASK,CAAT,CAAZ;AACD;AACF;;AAED,UAAIA,CAAC,GAAGH,GAAR,EAAa;AACXL,QAAAA,CAAC,CAACQ,CAAD,CAAD,GAAO,CAAP;;AACA,aAAK,IAAIL,GAAC,GAAGK,CAAC,GAAG,CAAjB,EAAoBL,GAAC,GAAG1B,CAAxB,EAA2B0B,GAAC,EAA5B,EAAgC;AAC9BH,UAAAA,CAAC,CAACQ,CAAD,CAAD,GAAOxC,UAAU,CAACgC,CAAC,CAACQ,CAAD,CAAF,EAAOR,CAAC,CAACG,GAAD,CAAR,CAAjB;AACD;;AACD,YAAIH,CAAC,CAACQ,CAAD,CAAD,KAAS,CAAb,EAAgB;AACd,cAAIR,CAAC,CAACQ,CAAC,GAAG,CAAL,CAAD,GAAW,CAAf,EAAkB;AAChBR,YAAAA,CAAC,CAACQ,CAAD,CAAD,GAAO,IAAIR,CAAC,CAACQ,CAAD,CAAZ;AACD;;AACD,eAAK,IAAIL,GAAC,GAAGK,CAAC,GAAG,CAAjB,EAAoBL,GAAC,GAAG1B,CAAxB,EAA2B0B,GAAC,EAA5B,EAAgC;AAC9BH,YAAAA,CAAC,CAACG,GAAD,CAAD,IAAQH,CAAC,CAACQ,CAAD,CAAT;AACD;;AACDR,UAAAA,CAAC,CAACQ,CAAC,GAAG,CAAL,CAAD,IAAY,CAAZ;AACD;;AACDR,QAAAA,CAAC,CAACQ,CAAD,CAAD,GAAO,CAACR,CAAC,CAACQ,CAAD,CAAT;;AACA,YAAIA,CAAC,GAAG,CAAJ,GAAQjC,CAAR,IAAayB,CAAC,CAACQ,CAAD,CAAD,KAAS,CAA1B,EAA6B;AAC3B,eAAK,IAAIL,GAAC,GAAGK,CAAC,GAAG,CAAjB,EAAoBL,GAAC,GAAG5B,CAAxB,EAA2B4B,GAAC,EAA5B,EAAgC;AAC9BF,YAAAA,IAAI,CAACE,GAAD,CAAJ,GAAU,CAAV;AACD;;AACD,eAAK,IAAIA,GAAC,GAAGK,CAAC,GAAG,CAAjB,EAAoBL,GAAC,GAAG5B,CAAxB,EAA2B4B,GAAC,EAA5B,EAAgC;AAC9B,iBAAK,IAAIQ,EAAC,GAAGH,CAAC,GAAG,CAAjB,EAAoBG,EAAC,GAAGlC,CAAxB,EAA2BkC,EAAC,EAA5B,EAAgC;AAC9BV,cAAAA,IAAI,CAACE,GAAD,CAAJ,IAAWH,CAAC,CAACW,EAAD,CAAD,GAAOzB,CAAC,CAACuB,GAAF,CAAMN,GAAN,EAASQ,EAAT,CAAlB;AACD;AACF;;AACD,eAAK,IAAIA,GAAC,GAAGH,CAAC,GAAG,CAAjB,EAAoBG,GAAC,GAAGlC,CAAxB,EAA2BkC,GAAC,EAA5B,EAAgC;AAC9B,gBAAIC,EAAC,GAAG,CAACZ,CAAC,CAACW,GAAD,CAAF,GAAQX,CAAC,CAACQ,CAAC,GAAG,CAAL,CAAjB;;AACA,iBAAK,IAAIL,IAAC,GAAGK,CAAC,GAAG,CAAjB,EAAoBL,IAAC,GAAG5B,CAAxB,EAA2B4B,IAAC,EAA5B,EAAgC;AAC9BjB,cAAAA,CAAC,CAACwB,GAAF,CAAMP,IAAN,EAASQ,GAAT,EAAYzB,CAAC,CAACuB,GAAF,CAAMN,IAAN,EAASQ,GAAT,IAAcC,EAAC,GAAGX,IAAI,CAACE,IAAD,CAAlC;AACD;AACF;AACF;;AACD,YAAInB,KAAJ,EAAW;AACT,eAAK,IAAImB,IAAC,GAAGK,CAAC,GAAG,CAAjB,EAAoBL,IAAC,GAAG1B,CAAxB,EAA2B0B,IAAC,EAA5B,EAAgC;AAC9BJ,YAAAA,CAAC,CAACW,GAAF,CAAMP,IAAN,EAASK,CAAT,EAAYR,CAAC,CAACG,IAAD,CAAb;AACD;AACF;AACF;AACF;;AAED,QAAIU,CAAC,GAAGpB,IAAI,CAACC,GAAL,CAASjB,CAAT,EAAYF,CAAC,GAAG,CAAhB,CAAR;;AACA,QAAI6B,GAAG,GAAG3B,CAAV,EAAa;AACXmB,MAAAA,CAAC,CAACQ,GAAD,CAAD,GAASlB,CAAC,CAACuB,GAAF,CAAML,GAAN,EAAWA,GAAX,CAAT;AACD;;AACD,QAAI7B,CAAC,GAAGsC,CAAR,EAAW;AACTjB,MAAAA,CAAC,CAACiB,CAAC,GAAG,CAAL,CAAD,GAAW,CAAX;AACD;;AACD,QAAIR,GAAG,GAAG,CAAN,GAAUQ,CAAd,EAAiB;AACfb,MAAAA,CAAC,CAACK,GAAD,CAAD,GAASnB,CAAC,CAACuB,GAAF,CAAMJ,GAAN,EAAWQ,CAAC,GAAG,CAAf,CAAT;AACD;;AACDb,IAAAA,CAAC,CAACa,CAAC,GAAG,CAAL,CAAD,GAAW,CAAX;;AAEA,QAAI/B,KAAJ,EAAW;AACT,WAAK,IAAI6B,GAAC,GAAGP,GAAb,EAAkBO,GAAC,GAAGnB,EAAtB,EAA0BmB,GAAC,EAA3B,EAA+B;AAC7B,aAAK,IAAIR,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG5B,CAApB,EAAuB4B,IAAC,EAAxB,EAA4B;AAC1BL,UAAAA,CAAC,CAACY,GAAF,CAAMP,IAAN,EAASQ,GAAT,EAAY,CAAZ;AACD;;AACDb,QAAAA,CAAC,CAACY,GAAF,CAAMC,GAAN,EAASA,GAAT,EAAY,CAAZ;AACD;;AACD,WAAK,IAAIH,EAAC,GAAGJ,GAAG,GAAG,CAAnB,EAAsBI,EAAC,IAAI,CAA3B,EAA8BA,EAAC,EAA/B,EAAmC;AACjC,YAAIZ,CAAC,CAACY,EAAD,CAAD,KAAS,CAAb,EAAgB;AACd,eAAK,IAAIG,GAAC,GAAGH,EAAC,GAAG,CAAjB,EAAoBG,GAAC,GAAGnB,EAAxB,EAA4BmB,GAAC,EAA7B,EAAiC;AAC/B,gBAAIC,GAAC,GAAG,CAAR;;AACA,iBAAK,IAAIT,IAAC,GAAGK,EAAb,EAAgBL,IAAC,GAAG5B,CAApB,EAAuB4B,IAAC,EAAxB,EAA4B;AAC1BS,cAAAA,GAAC,IAAId,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASK,EAAT,IAAcV,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASQ,GAAT,CAAnB;AACD;;AACDC,YAAAA,GAAC,GAAG,CAACA,GAAD,GAAKd,CAAC,CAACW,GAAF,CAAMD,EAAN,EAASA,EAAT,CAAT;;AACA,iBAAK,IAAIL,IAAC,GAAGK,EAAb,EAAgBL,IAAC,GAAG5B,CAApB,EAAuB4B,IAAC,EAAxB,EAA4B;AAC1BL,cAAAA,CAAC,CAACY,GAAF,CAAMP,IAAN,EAASQ,GAAT,EAAYb,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASQ,GAAT,IAAcC,GAAC,GAAGd,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASK,EAAT,CAA9B;AACD;AACF;;AACD,eAAK,IAAIL,IAAC,GAAGK,EAAb,EAAgBL,IAAC,GAAG5B,CAApB,EAAuB4B,IAAC,EAAxB,EAA4B;AAC1BL,YAAAA,CAAC,CAACY,GAAF,CAAMP,IAAN,EAASK,EAAT,EAAY,CAACV,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASK,EAAT,CAAb;AACD;;AACDV,UAAAA,CAAC,CAACY,GAAF,CAAMF,EAAN,EAASA,EAAT,EAAY,IAAIV,CAAC,CAACW,GAAF,CAAMD,EAAN,EAASA,EAAT,CAAhB;;AACA,eAAK,IAAIL,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAGK,EAAC,GAAG,CAAxB,EAA2BL,IAAC,EAA5B,EAAgC;AAC9BL,YAAAA,CAAC,CAACY,GAAF,CAAMP,IAAN,EAASK,EAAT,EAAY,CAAZ;AACD;AACF,SAlBD,MAkBO;AACL,eAAK,IAAIL,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG5B,CAApB,EAAuB4B,IAAC,EAAxB,EAA4B;AAC1BL,YAAAA,CAAC,CAACY,GAAF,CAAMP,IAAN,EAASK,EAAT,EAAY,CAAZ;AACD;;AACDV,UAAAA,CAAC,CAACY,GAAF,CAAMF,EAAN,EAASA,EAAT,EAAY,CAAZ;AACD;AACF;AACF;;AAED,QAAIxB,KAAJ,EAAW;AACT,WAAK,IAAIwB,GAAC,GAAG/B,CAAC,GAAG,CAAjB,EAAoB+B,GAAC,IAAI,CAAzB,EAA4BA,GAAC,EAA7B,EAAiC;AAC/B,YAAIA,GAAC,GAAGH,GAAJ,IAAWL,CAAC,CAACQ,GAAD,CAAD,KAAS,CAAxB,EAA2B;AACzB,eAAK,IAAIG,GAAC,GAAGH,GAAC,GAAG,CAAjB,EAAoBG,GAAC,GAAGlC,CAAxB,EAA2BkC,GAAC,EAA5B,EAAgC;AAC9B,gBAAIC,GAAC,GAAG,CAAR;;AACA,iBAAK,IAAIT,IAAC,GAAGK,GAAC,GAAG,CAAjB,EAAoBL,IAAC,GAAG1B,CAAxB,EAA2B0B,IAAC,EAA5B,EAAgC;AAC9BS,cAAAA,GAAC,IAAIb,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASK,GAAT,IAAcT,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASQ,GAAT,CAAnB;AACD;;AACDC,YAAAA,GAAC,GAAG,CAACA,GAAD,GAAKb,CAAC,CAACU,GAAF,CAAMD,GAAC,GAAG,CAAV,EAAaA,GAAb,CAAT;;AACA,iBAAK,IAAIL,IAAC,GAAGK,GAAC,GAAG,CAAjB,EAAoBL,IAAC,GAAG1B,CAAxB,EAA2B0B,IAAC,EAA5B,EAAgC;AAC9BJ,cAAAA,CAAC,CAACW,GAAF,CAAMP,IAAN,EAASQ,GAAT,EAAYZ,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASQ,GAAT,IAAcC,GAAC,GAAGb,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASK,GAAT,CAA9B;AACD;AACF;AACF;;AACD,aAAK,IAAIL,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG1B,CAApB,EAAuB0B,IAAC,EAAxB,EAA4B;AAC1BJ,UAAAA,CAAC,CAACW,GAAF,CAAMP,IAAN,EAASK,GAAT,EAAY,CAAZ;AACD;;AACDT,QAAAA,CAAC,CAACW,GAAF,CAAMF,GAAN,EAASA,GAAT,EAAY,CAAZ;AACD;AACF;;AAED,QAAIM,EAAE,GAAGD,CAAC,GAAG,CAAb;AACA,QAAIE,IAAI,GAAG,CAAX;AACA,QAAIC,GAAG,GAAGC,MAAM,CAACC,OAAjB;;AACA,WAAOL,CAAC,GAAG,CAAX,EAAc;AACZ,UAAIL,GAAC,SAAL;AAAA,UAAOW,IAAI,SAAX;;AACA,WAAKX,GAAC,GAAGK,CAAC,GAAG,CAAb,EAAgBL,GAAC,IAAI,CAAC,CAAtB,EAAyBA,GAAC,EAA1B,EAA8B;AAC5B,YAAIA,GAAC,KAAK,CAAC,CAAX,EAAc;AACZ;AACD;;AACD,YAAMY,KAAK,GACTH,MAAM,CAACI,SAAP,GAAmBL,GAAG,GAAGvB,IAAI,CAAC6B,GAAL,CAAS1B,CAAC,CAACY,GAAD,CAAD,GAAOf,IAAI,CAAC6B,GAAL,CAAS1B,CAAC,CAACY,GAAC,GAAG,CAAL,CAAV,CAAhB,CAD3B;;AAEA,YAAIf,IAAI,CAAC6B,GAAL,CAAStB,CAAC,CAACQ,GAAD,CAAV,KAAkBY,KAAlB,IAA2BH,MAAM,CAACM,KAAP,CAAavB,CAAC,CAACQ,GAAD,CAAd,CAA/B,EAAmD;AACjDR,UAAAA,CAAC,CAACQ,GAAD,CAAD,GAAO,CAAP;AACA;AACD;AACF;;AACD,UAAIA,GAAC,KAAKK,CAAC,GAAG,CAAd,EAAiB;AACfM,QAAAA,IAAI,GAAG,CAAP;AACD,OAFD,MAEO;AACL,YAAIK,EAAE,SAAN;;AACA,aAAKA,EAAE,GAAGX,CAAC,GAAG,CAAd,EAAiBW,EAAE,IAAIhB,GAAvB,EAA0BgB,EAAE,EAA5B,EAAgC;AAC9B,cAAIA,EAAE,KAAKhB,GAAX,EAAc;AACZ;AACD;;AACD,cAAII,GAAC,GACH,CAACY,EAAE,KAAKX,CAAP,GAAWpB,IAAI,CAAC6B,GAAL,CAAStB,CAAC,CAACwB,EAAD,CAAV,CAAX,GAA6B,CAA9B,KACCA,EAAE,KAAKhB,GAAC,GAAG,CAAX,GAAef,IAAI,CAAC6B,GAAL,CAAStB,CAAC,CAACwB,EAAE,GAAG,CAAN,CAAV,CAAf,GAAqC,CADtC,CADF;;AAGA,cAAI/B,IAAI,CAAC6B,GAAL,CAAS1B,CAAC,CAAC4B,EAAD,CAAV,KAAmBR,GAAG,GAAGJ,GAA7B,EAAgC;AAC9BhB,YAAAA,CAAC,CAAC4B,EAAD,CAAD,GAAQ,CAAR;AACA;AACD;AACF;;AACD,YAAIA,EAAE,KAAKhB,GAAX,EAAc;AACZW,UAAAA,IAAI,GAAG,CAAP;AACD,SAFD,MAEO,IAAIK,EAAE,KAAKX,CAAC,GAAG,CAAf,EAAkB;AACvBM,UAAAA,IAAI,GAAG,CAAP;AACD,SAFM,MAEA;AACLA,UAAAA,IAAI,GAAG,CAAP;AACAX,UAAAA,GAAC,GAAGgB,EAAJ;AACD;AACF;;AAEDhB,MAAAA,GAAC;;AAED,cAAQW,IAAR;AACE,aAAK,CAAL;AAAQ;AACN,gBAAIM,CAAC,GAAGzB,CAAC,CAACa,CAAC,GAAG,CAAL,CAAT;AACAb,YAAAA,CAAC,CAACa,CAAC,GAAG,CAAL,CAAD,GAAW,CAAX;;AACA,iBAAK,IAAIF,GAAC,GAAGE,CAAC,GAAG,CAAjB,EAAoBF,GAAC,IAAIH,GAAzB,EAA4BG,GAAC,EAA7B,EAAiC;AAC/B,kBAAIC,GAAC,GAAG5C,UAAU,CAAC4B,CAAC,CAACe,GAAD,CAAF,EAAOc,CAAP,CAAlB;;AACA,kBAAIC,EAAE,GAAG9B,CAAC,CAACe,GAAD,CAAD,GAAOC,GAAhB;AACA,kBAAIe,EAAE,GAAGF,CAAC,GAAGb,GAAb;AACAhB,cAAAA,CAAC,CAACe,GAAD,CAAD,GAAOC,GAAP;;AACA,kBAAID,GAAC,KAAKH,GAAV,EAAa;AACXiB,gBAAAA,CAAC,GAAG,CAACE,EAAD,GAAM3B,CAAC,CAACW,GAAC,GAAG,CAAL,CAAX;AACAX,gBAAAA,CAAC,CAACW,GAAC,GAAG,CAAL,CAAD,GAAWe,EAAE,GAAG1B,CAAC,CAACW,GAAC,GAAG,CAAL,CAAjB;AACD;;AACD,kBAAI3B,KAAJ,EAAW;AACT,qBAAK,IAAImB,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG1B,CAApB,EAAuB0B,IAAC,EAAxB,EAA4B;AAC1BS,kBAAAA,GAAC,GAAGc,EAAE,GAAG3B,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASQ,GAAT,CAAL,GAAmBgB,EAAE,GAAG5B,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASU,CAAC,GAAG,CAAb,CAA5B;AACAd,kBAAAA,CAAC,CAACW,GAAF,CAAMP,IAAN,EAASU,CAAC,GAAG,CAAb,EAAgB,CAACc,EAAD,GAAM5B,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASQ,GAAT,CAAN,GAAoBe,EAAE,GAAG3B,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASU,CAAC,GAAG,CAAb,CAAzC;AACAd,kBAAAA,CAAC,CAACW,GAAF,CAAMP,IAAN,EAASQ,GAAT,EAAYC,GAAZ;AACD;AACF;AACF;;AACD;AACD;;AACD,aAAK,CAAL;AAAQ;AACN,gBAAIa,EAAC,GAAGzB,CAAC,CAACQ,GAAC,GAAG,CAAL,CAAT;AACAR,YAAAA,CAAC,CAACQ,GAAC,GAAG,CAAL,CAAD,GAAW,CAAX;;AACA,iBAAK,IAAIG,GAAC,GAAGH,GAAb,EAAgBG,GAAC,GAAGE,CAApB,EAAuBF,GAAC,EAAxB,EAA4B;AAC1B,kBAAIC,GAAC,GAAG5C,UAAU,CAAC4B,CAAC,CAACe,GAAD,CAAF,EAAOc,EAAP,CAAlB;;AACA,kBAAIC,GAAE,GAAG9B,CAAC,CAACe,GAAD,CAAD,GAAOC,GAAhB;;AACA,kBAAIe,GAAE,GAAGF,EAAC,GAAGb,GAAb;;AACAhB,cAAAA,CAAC,CAACe,GAAD,CAAD,GAAOC,GAAP;AACAa,cAAAA,EAAC,GAAG,CAACE,GAAD,GAAM3B,CAAC,CAACW,GAAD,CAAX;AACAX,cAAAA,CAAC,CAACW,GAAD,CAAD,GAAOe,GAAE,GAAG1B,CAAC,CAACW,GAAD,CAAb;;AACA,kBAAI7B,KAAJ,EAAW;AACT,qBAAK,IAAIqB,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG5B,CAApB,EAAuB4B,IAAC,EAAxB,EAA4B;AAC1BS,kBAAAA,GAAC,GAAGc,GAAE,GAAG5B,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASQ,GAAT,CAAL,GAAmBgB,GAAE,GAAG7B,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASK,GAAC,GAAG,CAAb,CAA5B;AACAV,kBAAAA,CAAC,CAACY,GAAF,CAAMP,IAAN,EAASK,GAAC,GAAG,CAAb,EAAgB,CAACmB,GAAD,GAAM7B,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASQ,GAAT,CAAN,GAAoBe,GAAE,GAAG5B,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASK,GAAC,GAAG,CAAb,CAAzC;AACAV,kBAAAA,CAAC,CAACY,GAAF,CAAMP,IAAN,EAASQ,GAAT,EAAYC,GAAZ;AACD;AACF;AACF;;AACD;AACD;;AACD,aAAK,CAAL;AAAQ;AACN,gBAAMgB,KAAK,GAAGnC,IAAI,CAACa,GAAL,CACZb,IAAI,CAAC6B,GAAL,CAAS1B,CAAC,CAACiB,CAAC,GAAG,CAAL,CAAV,CADY,EAEZpB,IAAI,CAAC6B,GAAL,CAAS1B,CAAC,CAACiB,CAAC,GAAG,CAAL,CAAV,CAFY,EAGZpB,IAAI,CAAC6B,GAAL,CAAStB,CAAC,CAACa,CAAC,GAAG,CAAL,CAAV,CAHY,EAIZpB,IAAI,CAAC6B,GAAL,CAAS1B,CAAC,CAACY,GAAD,CAAV,CAJY,EAKZf,IAAI,CAAC6B,GAAL,CAAStB,CAAC,CAACQ,GAAD,CAAV,CALY,CAAd;AAOA,gBAAMqB,EAAE,GAAGjC,CAAC,CAACiB,CAAC,GAAG,CAAL,CAAD,GAAWe,KAAtB;AACA,gBAAME,IAAI,GAAGlC,CAAC,CAACiB,CAAC,GAAG,CAAL,CAAD,GAAWe,KAAxB;AACA,gBAAMG,IAAI,GAAG/B,CAAC,CAACa,CAAC,GAAG,CAAL,CAAD,GAAWe,KAAxB;AACA,gBAAMI,EAAE,GAAGpC,CAAC,CAACY,GAAD,CAAD,GAAOoB,KAAlB;AACA,gBAAMK,EAAE,GAAGjC,CAAC,CAACQ,GAAD,CAAD,GAAOoB,KAAlB;AACA,gBAAMM,CAAC,GAAG,CAAC,CAACJ,IAAI,GAAGD,EAAR,KAAeC,IAAI,GAAGD,EAAtB,IAA4BE,IAAI,GAAGA,IAApC,IAA4C,CAAtD;AACA,gBAAMI,CAAC,GAAGN,EAAE,GAAGE,IAAL,IAAaF,EAAE,GAAGE,IAAlB,CAAV;AACA,gBAAIK,KAAK,GAAG,CAAZ;;AACA,gBAAIF,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,CAArB,EAAwB;AACtB,kBAAID,CAAC,GAAG,CAAR,EAAW;AACTE,gBAAAA,KAAK,GAAG,IAAI3C,IAAI,CAAC4C,IAAL,CAAUH,CAAC,GAAGA,CAAJ,GAAQC,CAAlB,CAAZ;AACD,eAFD,MAEO;AACLC,gBAAAA,KAAK,GAAG3C,IAAI,CAAC4C,IAAL,CAAUH,CAAC,GAAGA,CAAJ,GAAQC,CAAlB,CAAR;AACD;;AACDC,cAAAA,KAAK,GAAGD,CAAC,IAAID,CAAC,GAAGE,KAAR,CAAT;AACD;;AACD,gBAAIX,GAAC,GAAG,CAACO,EAAE,GAAGH,EAAN,KAAaG,EAAE,GAAGH,EAAlB,IAAwBO,KAAhC;;AACA,gBAAIE,CAAC,GAAGN,EAAE,GAAGC,EAAb;;AACA,iBAAK,IAAItB,GAAC,GAAGH,GAAb,EAAgBG,GAAC,GAAGE,CAAC,GAAG,CAAxB,EAA2BF,GAAC,EAA5B,EAAgC;AAC9B,kBAAIC,GAAC,GAAG5C,UAAU,CAACyD,GAAD,EAAIa,CAAJ,CAAlB;;AACA,kBAAI1B,GAAC,KAAK,CAAV,EAAaA,GAAC,GAAGK,MAAM,CAACI,SAAX;;AACb,kBAAIK,IAAE,GAAGD,GAAC,GAAGb,GAAb;;AACA,kBAAIe,IAAE,GAAGW,CAAC,GAAG1B,GAAb;;AACA,kBAAID,GAAC,KAAKH,GAAV,EAAa;AACXR,gBAAAA,CAAC,CAACW,GAAC,GAAG,CAAL,CAAD,GAAWC,GAAX;AACD;;AACDa,cAAAA,GAAC,GAAGC,IAAE,GAAG9B,CAAC,CAACe,GAAD,CAAN,GAAYgB,IAAE,GAAG3B,CAAC,CAACW,GAAD,CAAtB;AACAX,cAAAA,CAAC,CAACW,GAAD,CAAD,GAAOe,IAAE,GAAG1B,CAAC,CAACW,GAAD,CAAN,GAAYgB,IAAE,GAAG/B,CAAC,CAACe,GAAD,CAAzB;AACA2B,cAAAA,CAAC,GAAGX,IAAE,GAAG/B,CAAC,CAACe,GAAC,GAAG,CAAL,CAAV;AACAf,cAAAA,CAAC,CAACe,GAAC,GAAG,CAAL,CAAD,GAAWe,IAAE,GAAG9B,CAAC,CAACe,GAAC,GAAG,CAAL,CAAjB;;AACA,kBAAI3B,KAAJ,EAAW;AACT,qBAAK,IAAImB,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG1B,CAApB,EAAuB0B,IAAC,EAAxB,EAA4B;AAC1BS,kBAAAA,GAAC,GAAGc,IAAE,GAAG3B,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASQ,GAAT,CAAL,GAAmBgB,IAAE,GAAG5B,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASQ,GAAC,GAAG,CAAb,CAA5B;AACAZ,kBAAAA,CAAC,CAACW,GAAF,CAAMP,IAAN,EAASQ,GAAC,GAAG,CAAb,EAAgB,CAACgB,IAAD,GAAM5B,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASQ,GAAT,CAAN,GAAoBe,IAAE,GAAG3B,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASQ,GAAC,GAAG,CAAb,CAAzC;AACAZ,kBAAAA,CAAC,CAACW,GAAF,CAAMP,IAAN,EAASQ,GAAT,EAAYC,GAAZ;AACD;AACF;;AACDA,cAAAA,GAAC,GAAG5C,UAAU,CAACyD,GAAD,EAAIa,CAAJ,CAAd;AACA,kBAAI1B,GAAC,KAAK,CAAV,EAAaA,GAAC,GAAGK,MAAM,CAACI,SAAX;AACbK,cAAAA,IAAE,GAAGD,GAAC,GAAGb,GAAT;AACAe,cAAAA,IAAE,GAAGW,CAAC,GAAG1B,GAAT;AACAhB,cAAAA,CAAC,CAACe,GAAD,CAAD,GAAOC,GAAP;AACAa,cAAAA,GAAC,GAAGC,IAAE,GAAG1B,CAAC,CAACW,GAAD,CAAN,GAAYgB,IAAE,GAAG/B,CAAC,CAACe,GAAC,GAAG,CAAL,CAAtB;AACAf,cAAAA,CAAC,CAACe,GAAC,GAAG,CAAL,CAAD,GAAW,CAACgB,IAAD,GAAM3B,CAAC,CAACW,GAAD,CAAP,GAAae,IAAE,GAAG9B,CAAC,CAACe,GAAC,GAAG,CAAL,CAA9B;AACA2B,cAAAA,CAAC,GAAGX,IAAE,GAAG3B,CAAC,CAACW,GAAC,GAAG,CAAL,CAAV;AACAX,cAAAA,CAAC,CAACW,GAAC,GAAG,CAAL,CAAD,GAAWe,IAAE,GAAG1B,CAAC,CAACW,GAAC,GAAG,CAAL,CAAjB;;AACA,kBAAI7B,KAAK,IAAI6B,GAAC,GAAGpC,CAAC,GAAG,CAArB,EAAwB;AACtB,qBAAK,IAAI4B,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG5B,CAApB,EAAuB4B,IAAC,EAAxB,EAA4B;AAC1BS,kBAAAA,GAAC,GAAGc,IAAE,GAAG5B,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASQ,GAAT,CAAL,GAAmBgB,IAAE,GAAG7B,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASQ,GAAC,GAAG,CAAb,CAA5B;AACAb,kBAAAA,CAAC,CAACY,GAAF,CAAMP,IAAN,EAASQ,GAAC,GAAG,CAAb,EAAgB,CAACgB,IAAD,GAAM7B,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASQ,GAAT,CAAN,GAAoBe,IAAE,GAAG5B,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASQ,GAAC,GAAG,CAAb,CAAzC;AACAb,kBAAAA,CAAC,CAACY,GAAF,CAAMP,IAAN,EAASQ,GAAT,EAAYC,GAAZ;AACD;AACF;AACF;;AACDZ,YAAAA,CAAC,CAACa,CAAC,GAAG,CAAL,CAAD,GAAWY,GAAX;AACAV,YAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;AACA;AACD;;AACD,aAAK,CAAL;AAAQ;AACN,gBAAInB,CAAC,CAACY,GAAD,CAAD,IAAQ,CAAZ,EAAe;AACbZ,cAAAA,CAAC,CAACY,GAAD,CAAD,GAAOZ,CAAC,CAACY,GAAD,CAAD,GAAO,CAAP,GAAW,CAACZ,CAAC,CAACY,GAAD,CAAb,GAAmB,CAA1B;;AACA,kBAAIxB,KAAJ,EAAW;AACT,qBAAK,IAAImB,IAAC,GAAG,CAAb,EAAgBA,IAAC,IAAIW,EAArB,EAAyBX,IAAC,EAA1B,EAA8B;AAC5BJ,kBAAAA,CAAC,CAACW,GAAF,CAAMP,IAAN,EAASK,GAAT,EAAY,CAACT,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASK,GAAT,CAAb;AACD;AACF;AACF;;AACD,mBAAOA,GAAC,GAAGM,EAAX,EAAe;AACb,kBAAIlB,CAAC,CAACY,GAAD,CAAD,IAAQZ,CAAC,CAACY,GAAC,GAAG,CAAL,CAAb,EAAsB;AACpB;AACD;;AACD,kBAAII,GAAC,GAAGhB,CAAC,CAACY,GAAD,CAAT;AACAZ,cAAAA,CAAC,CAACY,GAAD,CAAD,GAAOZ,CAAC,CAACY,GAAC,GAAG,CAAL,CAAR;AACAZ,cAAAA,CAAC,CAACY,GAAC,GAAG,CAAL,CAAD,GAAWI,GAAX;;AACA,kBAAI5B,KAAK,IAAIwB,GAAC,GAAG/B,CAAC,GAAG,CAArB,EAAwB;AACtB,qBAAK,IAAI0B,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG1B,CAApB,EAAuB0B,IAAC,EAAxB,EAA4B;AAC1BS,kBAAAA,GAAC,GAAGb,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASK,GAAC,GAAG,CAAb,CAAJ;AACAT,kBAAAA,CAAC,CAACW,GAAF,CAAMP,IAAN,EAASK,GAAC,GAAG,CAAb,EAAgBT,CAAC,CAACU,GAAF,CAAMN,IAAN,EAASK,GAAT,CAAhB;AACAT,kBAAAA,CAAC,CAACW,GAAF,CAAMP,IAAN,EAASK,GAAT,EAAYI,GAAZ;AACD;AACF;;AACD,kBAAI9B,KAAK,IAAI0B,GAAC,GAAGjC,CAAC,GAAG,CAArB,EAAwB;AACtB,qBAAK,IAAI4B,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG5B,CAApB,EAAuB4B,IAAC,EAAxB,EAA4B;AAC1BS,kBAAAA,GAAC,GAAGd,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASK,GAAC,GAAG,CAAb,CAAJ;AACAV,kBAAAA,CAAC,CAACY,GAAF,CAAMP,IAAN,EAASK,GAAC,GAAG,CAAb,EAAgBV,CAAC,CAACW,GAAF,CAAMN,IAAN,EAASK,GAAT,CAAhB;AACAV,kBAAAA,CAAC,CAACY,GAAF,CAAMP,IAAN,EAASK,GAAT,EAAYI,GAAZ;AACD;AACF;;AACDJ,cAAAA,GAAC;AACF;;AACDO,YAAAA,IAAI,GAAG,CAAP;AACAF,YAAAA,CAAC;AACD;AACD;AACD;AAjJF;AAmJD;;AAED,QAAI5B,OAAJ,EAAa;AACX,UAAIsD,GAAG,GAAGxC,CAAV;AACAA,MAAAA,CAAC,GAAGD,CAAJ;AACAA,MAAAA,CAAC,GAAGyC,GAAJ;AACD;;AAED,SAAKhE,CAAL,GAASA,CAAT;AACA,SAAKE,CAAL,GAASA,CAAT;AACA,SAAKmB,CAAL,GAASA,CAAT;AACA,SAAKE,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACD;;;;WAED,eAAM7B,KAAN,EAAa;AACX,UAAIsE,CAAC,GAAGtE,KAAR;AACA,UAAI8B,CAAC,GAAG,KAAKyC,SAAb;AACA,UAAIC,KAAK,GAAG,KAAK9C,CAAL,CAAO+C,MAAnB;AACA,UAAIC,EAAE,GAAG9E,MAAM,CAAC+E,KAAP,CAAaH,KAAb,EAAoBA,KAApB,CAAT;;AAEA,WAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuC,KAApB,EAA2BvC,CAAC,EAA5B,EAAgC;AAC9B,YAAIV,IAAI,CAAC6B,GAAL,CAAS,KAAK1B,CAAL,CAAOO,CAAP,CAAT,KAAuBH,CAA3B,EAA8B;AAC5B4C,UAAAA,EAAE,CAAClC,GAAH,CAAOP,CAAP,EAAUA,CAAV,EAAa,CAAb;AACD,SAFD,MAEO;AACLyC,UAAAA,EAAE,CAAClC,GAAH,CAAOP,CAAP,EAAUA,CAAV,EAAa,IAAI,KAAKP,CAAL,CAAOO,CAAP,CAAjB;AACD;AACF;;AAED,UAAIL,CAAC,GAAG,KAAKA,CAAb;AACA,UAAIC,CAAC,GAAG,KAAK+C,oBAAb;AAEA,UAAIC,EAAE,GAAGhD,CAAC,CAACiD,IAAF,CAAOJ,EAAP,CAAT;AACA,UAAIK,KAAK,GAAGlD,CAAC,CAACvB,IAAd;AACA,UAAI0E,KAAK,GAAGpD,CAAC,CAACtB,IAAd;AACA,UAAI2E,GAAG,GAAGrF,MAAM,CAAC+E,KAAP,CAAaI,KAAb,EAAoBC,KAApB,CAAV;;AAEA,WAAK,IAAI/C,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG8C,KAApB,EAA2B9C,IAAC,EAA5B,EAAgC;AAC9B,aAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuC,KAApB,EAA2BvC,CAAC,EAA5B,EAAgC;AAC9B,cAAIyC,GAAG,GAAG,CAAV;;AACA,eAAK,IAAI5C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,KAApB,EAA2BlC,CAAC,EAA5B,EAAgC;AAC9B4C,YAAAA,GAAG,IAAIL,EAAE,CAACtC,GAAH,CAAON,IAAP,EAAUK,CAAV,IAAeV,CAAC,CAACW,GAAF,CAAME,CAAN,EAASH,CAAT,CAAtB;AACD;;AACD2C,UAAAA,GAAG,CAACzC,GAAJ,CAAQP,IAAR,EAAWQ,CAAX,EAAcyC,GAAd;AACD;AACF;;AAED,aAAOD,GAAG,CAACH,IAAJ,CAASR,CAAT,CAAP;AACD;;;WAED,0BAAiBtE,KAAjB,EAAwB;AACtB,aAAO,KAAKmF,KAAL,CAAWvF,MAAM,CAACwF,IAAP,CAAYpF,KAAZ,CAAX,CAAP;AACD;;;WAED,mBAAU;AACR,UAAI6B,CAAC,GAAG,KAAKA,CAAb;AACA,UAAIC,CAAC,GAAG,KAAKyC,SAAb;AACA,UAAIQ,KAAK,GAAGlD,CAAC,CAACvB,IAAd;AACA,UAAI+E,KAAK,GAAGxD,CAAC,CAACrB,OAAd;AACA,UAAI8E,CAAC,GAAG,IAAI1F,MAAJ,CAAWmF,KAAX,EAAkB,KAAKrD,CAAL,CAAO+C,MAAzB,CAAR;;AAEA,WAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8C,KAApB,EAA2B9C,CAAC,EAA5B,EAAgC;AAC9B,aAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4C,KAApB,EAA2B5C,CAAC,EAA5B,EAAgC;AAC9B,cAAIlB,IAAI,CAAC6B,GAAL,CAAS,KAAK1B,CAAL,CAAOe,CAAP,CAAT,IAAsBX,CAA1B,EAA6B;AAC3BwD,YAAAA,CAAC,CAAC9C,GAAF,CAAMP,CAAN,EAASQ,CAAT,EAAYZ,CAAC,CAACU,GAAF,CAAMN,CAAN,EAASQ,CAAT,IAAc,KAAKf,CAAL,CAAOe,CAAP,CAA1B;AACD;AACF;AACF;;AAED,UAAIb,CAAC,GAAG,KAAKA,CAAb;AAEA,UAAIoD,KAAK,GAAGpD,CAAC,CAACtB,IAAd;AACA,UAAIiF,KAAK,GAAG3D,CAAC,CAACpB,OAAd;AACA,UAAI8D,CAAC,GAAG,IAAI1E,MAAJ,CAAWmF,KAAX,EAAkBC,KAAlB,CAAR;;AAEA,WAAK,IAAI/C,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG8C,KAApB,EAA2B9C,IAAC,EAA5B,EAAgC;AAC9B,aAAK,IAAIQ,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGuC,KAApB,EAA2BvC,GAAC,EAA5B,EAAgC;AAC9B,cAAIyC,GAAG,GAAG,CAAV;;AACA,eAAK,IAAI5C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiD,KAApB,EAA2BjD,CAAC,EAA5B,EAAgC;AAC9B4C,YAAAA,GAAG,IAAII,CAAC,CAAC/C,GAAF,CAAMN,IAAN,EAASK,CAAT,IAAcV,CAAC,CAACW,GAAF,CAAME,GAAN,EAASH,CAAT,CAArB;AACD;;AACDgC,UAAAA,CAAC,CAAC9B,GAAF,CAAMP,IAAN,EAASQ,GAAT,EAAYyC,GAAZ;AACD;AACF;;AAED,aAAOZ,CAAP;AACD;;;SAED,eAAgB;AACd,aAAO,KAAK5C,CAAL,CAAO,CAAP,IAAY,KAAKA,CAAL,CAAOH,IAAI,CAACC,GAAL,CAAS,KAAKnB,CAAd,EAAiB,KAAKE,CAAtB,IAA2B,CAAlC,CAAnB;AACD;;;SAED,eAAY;AACV,aAAO,KAAKmB,CAAL,CAAO,CAAP,CAAP;AACD;;;SAED,eAAW;AACT,UAAI8D,GAAG,GAAGjE,IAAI,CAACa,GAAL,CAAS,KAAK/B,CAAd,EAAiB,KAAKE,CAAtB,IAA2B,KAAKmB,CAAL,CAAO,CAAP,CAA3B,GAAuCqB,MAAM,CAACC,OAAxD;AACA,UAAIyC,CAAC,GAAG,CAAR;AACA,UAAI/D,CAAC,GAAG,KAAKA,CAAb;;AACA,WAAK,IAAIO,CAAC,GAAG,CAAR,EAAWyD,EAAE,GAAGhE,CAAC,CAAC+C,MAAvB,EAA+BxC,CAAC,GAAGyD,EAAnC,EAAuCzD,CAAC,EAAxC,EAA4C;AAC1C,YAAIP,CAAC,CAACO,CAAD,CAAD,GAAOuD,GAAX,EAAgB;AACdC,UAAAA,CAAC;AACF;AACF;;AACD,aAAOA,CAAP;AACD;;;SAED,eAAe;AACb,aAAOE,KAAK,CAACC,IAAN,CAAW,KAAKlE,CAAhB,CAAP;AACD;;;SAED,eAAgB;AACd,aAAQqB,MAAM,CAACC,OAAP,GAAiB,CAAlB,GAAuBzB,IAAI,CAACa,GAAL,CAAS,KAAK/B,CAAd,EAAiB,KAAKE,CAAtB,CAAvB,GAAkD,KAAKmB,CAAL,CAAO,CAAP,CAAzD;AACD;;;SAED,eAA0B;AACxB,aAAO,KAAKE,CAAZ;AACD;;;SAED,eAA2B;AACzB,aAAO,KAAKC,CAAZ;AACD;;;SAED,eAAqB;AACnB,aAAOjC,MAAM,CAACwF,IAAP,CAAY,KAAK1D,CAAjB,CAAP;AACD;;;;;;SAxgBkB3B,0B","sourcesContent":["import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}