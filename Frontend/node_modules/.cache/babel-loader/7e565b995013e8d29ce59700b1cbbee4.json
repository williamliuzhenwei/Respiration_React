{"ast":null,"code":"export var isObject = function isObject(val) {\n  return val !== null && typeof val === 'object';\n};\nexport var clone = function clone(target) {\n  if (target === null) {\n    return target;\n  }\n\n  if (target instanceof Date) {\n    return new Date(target.getTime());\n  }\n\n  if (target instanceof Array) {\n    var cp = [];\n    target.forEach(function (v) {\n      cp.push(v);\n    });\n    return cp.map(function (n) {\n      return clone(n);\n    });\n  }\n\n  if (typeof target === 'object' && target !== {}) {\n    var _cp = Object.assign({}, target);\n\n    Object.keys(_cp).forEach(function (k) {\n      _cp[k] = clone(_cp[k]);\n    });\n    return _cp;\n  }\n\n  return target;\n};","map":{"version":3,"sources":["../../src/util/object.ts"],"names":[],"mappings":"AAAA,OAAO,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,GAAD;AAAA,SACtB,GAAG,KAAK,IAAR,IAAgB,OAAO,GAAP,KAAe,QADT;AAAA,CAAjB;AAGP,OAAO,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAI,MAAJ,EAAoB;AACvC,MAAI,MAAM,KAAK,IAAf,EAAqB;AACnB,WAAO,MAAP;AACD;;AACD,MAAI,MAAM,YAAY,IAAtB,EAA4B;AAC1B,WAAO,IAAI,IAAJ,CAAS,MAAM,CAAC,OAAP,EAAT,CAAP;AACD;;AACD,MAAI,MAAM,YAAY,KAAtB,EAA6B;AAC3B,QAAM,EAAE,GAAG,EAAX;AACE,IAAA,MAAgB,CAAC,OAAjB,CAAyB,UAAC,CAAD,EAAM;AAC/B,MAAA,EAAE,CAAC,IAAH,CAAQ,CAAR;AACD,KAFC;AAGF,WAAO,EAAE,CAAC,GAAH,CAAO,UAAC,CAAD;AAAA,aAAY,KAAK,CAAM,CAAN,CAAjB;AAAA,KAAP,CAAP;AACD;;AACD,MAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,MAAM,KAAK,EAA7C,EAAiD;AAC/C,QAAM,GAAE,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,MAAN,CAAX;;AAGA,IAAA,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAgB,OAAhB,CAAwB,UAAC,CAAD,EAAM;AAC5B,MAAA,GAAE,CAAC,CAAD,CAAF,GAAQ,KAAK,CAAM,GAAE,CAAC,CAAD,CAAR,CAAb;AACD,KAFD;AAGA,WAAO,GAAP;AACD;;AACD,SAAO,MAAP;AACD,CAxBM","sourceRoot":"","sourcesContent":["export const isObject = (val) => val !== null && typeof val === 'object';\nexport const clone = (target) => {\n    if (target === null) {\n        return target;\n    }\n    if (target instanceof Date) {\n        return new Date(target.getTime());\n    }\n    if (target instanceof Array) {\n        const cp = [];\n        target.forEach((v) => {\n            cp.push(v);\n        });\n        return cp.map((n) => clone(n));\n    }\n    if (typeof target === 'object' && target !== {}) {\n        const cp = Object.assign({}, target);\n        Object.keys(cp).forEach((k) => {\n            cp[k] = clone(cp[k]);\n        });\n        return cp;\n    }\n    return target;\n};\n//# sourceMappingURL=object.js.map"]},"metadata":{},"sourceType":"module"}