{"ast":null,"code":"import _classCallCheck from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { checkIndices } from '../util';\nimport BaseView from './base';\n\nvar MatrixSelectionView = /*#__PURE__*/function (_BaseView) {\n  _inherits(MatrixSelectionView, _BaseView);\n\n  var _super = _createSuper(MatrixSelectionView);\n\n  function MatrixSelectionView(matrix, rowIndices, columnIndices) {\n    var _this;\n\n    _classCallCheck(this, MatrixSelectionView);\n\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\n    _this = _super.call(this, matrix, indices.row.length, indices.column.length);\n    _this.rowIndices = indices.row;\n    _this.columnIndices = indices.column;\n    return _this;\n  }\n\n  _createClass(MatrixSelectionView, [{\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, value) {\n      this.matrix.set(this.rowIndices[rowIndex], this.columnIndices[columnIndex], value);\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(rowIndex, columnIndex) {\n      return this.matrix.get(this.rowIndices[rowIndex], this.columnIndices[columnIndex]);\n    }\n  }]);\n\n  return MatrixSelectionView;\n}(BaseView);\n\nexport { MatrixSelectionView as default };","map":{"version":3,"sources":["/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/ml-matrix/src/views/selection.js"],"names":["checkIndices","BaseView","MatrixSelectionView","matrix","rowIndices","columnIndices","indices","row","length","column","rowIndex","columnIndex","value","set","get"],"mappings":";;;;AAAA,SAASA,YAAT,QAA6B,SAA7B;AAEA,OAAOC,QAAP,MAAqB,QAArB;;IAEqBC,mB;;;;;AACnB,+BAAYC,MAAZ,EAAoBC,UAApB,EAAgCC,aAAhC,EAA+C;AAAA;;AAAA;;AAC7C,QAAIC,OAAO,GAAGN,YAAY,CAACG,MAAD,EAASC,UAAT,EAAqBC,aAArB,CAA1B;AACA,8BAAMF,MAAN,EAAcG,OAAO,CAACC,GAAR,CAAYC,MAA1B,EAAkCF,OAAO,CAACG,MAAR,CAAeD,MAAjD;AACA,UAAKJ,UAAL,GAAkBE,OAAO,CAACC,GAA1B;AACA,UAAKF,aAAL,GAAqBC,OAAO,CAACG,MAA7B;AAJ6C;AAK9C;;;;WAED,aAAIC,QAAJ,EAAcC,WAAd,EAA2BC,KAA3B,EAAkC;AAChC,WAAKT,MAAL,CAAYU,GAAZ,CACE,KAAKT,UAAL,CAAgBM,QAAhB,CADF,EAEE,KAAKL,aAAL,CAAmBM,WAAnB,CAFF,EAGEC,KAHF;AAKA,aAAO,IAAP;AACD;;;WAED,aAAIF,QAAJ,EAAcC,WAAd,EAA2B;AACzB,aAAO,KAAKR,MAAL,CAAYW,GAAZ,CACL,KAAKV,UAAL,CAAgBM,QAAhB,CADK,EAEL,KAAKL,aAAL,CAAmBM,WAAnB,CAFK,CAAP;AAID;;;;EAtB8CV,Q;;SAA5BC,mB","sourcesContent":["import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    let indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}