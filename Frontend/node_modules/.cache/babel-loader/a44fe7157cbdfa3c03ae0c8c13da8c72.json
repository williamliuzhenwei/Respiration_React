{"ast":null,"code":"import _classCallCheck from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AbstractMatrix } from '../matrix';\n\nvar WrapperMatrix1D = /*#__PURE__*/function (_AbstractMatrix) {\n  _inherits(WrapperMatrix1D, _AbstractMatrix);\n\n  var _super = _createSuper(WrapperMatrix1D);\n\n  function WrapperMatrix1D(data) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, WrapperMatrix1D);\n\n    var _options$rows = options.rows,\n        rows = _options$rows === void 0 ? 1 : _options$rows;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n\n    _this = _super.call(this);\n    _this.rows = rows;\n    _this.columns = data.length / rows;\n    _this.data = data;\n    return _this;\n  }\n\n  _createClass(WrapperMatrix1D, [{\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, value) {\n      var index = this._calculateIndex(rowIndex, columnIndex);\n\n      this.data[index] = value;\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(rowIndex, columnIndex) {\n      var index = this._calculateIndex(rowIndex, columnIndex);\n\n      return this.data[index];\n    }\n  }, {\n    key: \"_calculateIndex\",\n    value: function _calculateIndex(row, column) {\n      return row * this.columns + column;\n    }\n  }]);\n\n  return WrapperMatrix1D;\n}(AbstractMatrix);\n\nexport { WrapperMatrix1D as default };","map":{"version":3,"sources":["/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js"],"names":["AbstractMatrix","WrapperMatrix1D","data","options","rows","length","Error","columns","rowIndex","columnIndex","value","index","_calculateIndex","row","column"],"mappings":";;;;AAAA,SAASA,cAAT,QAA+B,WAA/B;;IAEqBC,e;;;;;AACnB,2BAAYC,IAAZ,EAAgC;AAAA;;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AAC9B,wBAAqBA,OAArB,CAAQC,IAAR;AAAA,QAAQA,IAAR,8BAAe,CAAf;;AAEA,QAAIF,IAAI,CAACG,MAAL,GAAcD,IAAd,KAAuB,CAA3B,EAA8B;AAC5B,YAAM,IAAIE,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD;AACA,UAAKF,IAAL,GAAYA,IAAZ;AACA,UAAKG,OAAL,GAAeL,IAAI,CAACG,MAAL,GAAcD,IAA7B;AACA,UAAKF,IAAL,GAAYA,IAAZ;AAT8B;AAU/B;;;;WAED,aAAIM,QAAJ,EAAcC,WAAd,EAA2BC,KAA3B,EAAkC;AAChC,UAAIC,KAAK,GAAG,KAAKC,eAAL,CAAqBJ,QAArB,EAA+BC,WAA/B,CAAZ;;AACA,WAAKP,IAAL,CAAUS,KAAV,IAAmBD,KAAnB;AACA,aAAO,IAAP;AACD;;;WAED,aAAIF,QAAJ,EAAcC,WAAd,EAA2B;AACzB,UAAIE,KAAK,GAAG,KAAKC,eAAL,CAAqBJ,QAArB,EAA+BC,WAA/B,CAAZ;;AACA,aAAO,KAAKP,IAAL,CAAUS,KAAV,CAAP;AACD;;;WAED,yBAAgBE,GAAhB,EAAqBC,MAArB,EAA6B;AAC3B,aAAOD,GAAG,GAAG,KAAKN,OAAX,GAAqBO,MAA5B;AACD;;;;EA1B0Cd,c;;SAAxBC,e","sourcesContent":["import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix {\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}