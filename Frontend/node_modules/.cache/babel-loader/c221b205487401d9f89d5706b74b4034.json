{"ast":null,"code":"import _classCallCheck from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nvar nipals = function nipals(X) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  _classCallCheck(this, nipals);\n\n  X = WrapperMatrix2D.checkMatrix(X);\n  var Y = options.Y;\n  var _options$scaleScores = options.scaleScores,\n      scaleScores = _options$scaleScores === void 0 ? false : _options$scaleScores,\n      _options$maxIteration = options.maxIterations,\n      maxIterations = _options$maxIteration === void 0 ? 1000 : _options$maxIteration,\n      _options$terminationC = options.terminationCriteria,\n      terminationCriteria = _options$terminationC === void 0 ? 1e-10 : _options$terminationC;\n  var u;\n\n  if (Y) {\n    if (Array.isArray(Y) && typeof Y[0] === 'number') {\n      Y = Matrix.columnVector(Y);\n    } else {\n      Y = WrapperMatrix2D.checkMatrix(Y);\n    }\n\n    if (Y.rows !== X.rows) {\n      throw new Error('Y should have the same number of rows as X');\n    }\n\n    u = Y.getColumnVector(0);\n  } else {\n    u = X.getColumnVector(0);\n  }\n\n  var diff = 1;\n  var t, q, w, tOld;\n\n  for (var counter = 0; counter < maxIterations && diff > terminationCriteria; counter++) {\n    w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n    w = w.div(w.norm());\n    t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n    if (counter > 0) {\n      diff = t.clone().sub(tOld).pow(2).sum();\n    }\n\n    tOld = t.clone();\n\n    if (Y) {\n      q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      q = q.div(q.norm());\n      u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n    } else {\n      u = t;\n    }\n  }\n\n  if (Y) {\n    var p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n    p = p.div(p.norm());\n    var xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n    var residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n    var yResidual = Y.clone().sub(t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()));\n    this.t = t;\n    this.p = p.transpose();\n    this.w = w.transpose();\n    this.q = q;\n    this.u = u;\n    this.s = t.transpose().mmul(t);\n    this.xResidual = xResidual;\n    this.yResidual = yResidual;\n    this.betas = residual;\n  } else {\n    this.w = w.transpose();\n    this.s = t.transpose().mmul(t).sqrt();\n\n    if (scaleScores) {\n      this.t = t.clone().div(this.s.get(0, 0));\n    } else {\n      this.t = t;\n    }\n\n    this.xResidual = X.sub(t.mmul(w.transpose()));\n  }\n};\n\nexport { nipals as default };","map":{"version":3,"sources":["/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/ml-matrix/src/dc/nipals.js"],"names":["Matrix","WrapperMatrix2D","nipals","X","options","checkMatrix","Y","scaleScores","maxIterations","terminationCriteria","u","Array","isArray","columnVector","rows","Error","getColumnVector","diff","t","q","w","tOld","counter","transpose","mmul","div","get","norm","clone","sub","pow","sum","p","xResidual","residual","yResidual","mulS","s","betas","sqrt"],"mappings":"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","sourcesContent":["import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let { Y } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10,\n    } = options;\n\n    let u;\n    if (Y) {\n      if (Array.isArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (Y.rows !== X.rows) {\n        throw new Error('Y should have the same number of rows as X');\n      }\n      u = Y.getColumnVector(0);\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (\n      let counter = 0;\n      counter < maxIterations && diff > terminationCriteria;\n      counter++\n    ) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(\n        t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()),\n      );\n\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}