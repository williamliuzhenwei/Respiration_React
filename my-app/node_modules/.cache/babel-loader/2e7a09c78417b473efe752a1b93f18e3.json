{"ast":null,"code":"import _classCallCheck from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { checkRowIndices } from '../util';\nimport BaseView from './base';\n\nvar MatrixRowSelectionView = /*#__PURE__*/function (_BaseView) {\n  _inherits(MatrixRowSelectionView, _BaseView);\n\n  var _super = _createSuper(MatrixRowSelectionView);\n\n  function MatrixRowSelectionView(matrix, rowIndices) {\n    var _this;\n\n    _classCallCheck(this, MatrixRowSelectionView);\n\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    _this = _super.call(this, matrix, rowIndices.length, matrix.columns);\n    _this.rowIndices = rowIndices;\n    return _this;\n  }\n\n  _createClass(MatrixRowSelectionView, [{\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, value) {\n      this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(rowIndex, columnIndex) {\n      return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n    }\n  }]);\n\n  return MatrixRowSelectionView;\n}(BaseView);\n\nexport { MatrixRowSelectionView as default };","map":{"version":3,"sources":["/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/ml-matrix/src/views/rowSelection.js"],"names":["checkRowIndices","BaseView","MatrixRowSelectionView","matrix","rowIndices","length","columns","rowIndex","columnIndex","value","set","get"],"mappings":";;;;AAAA,SAASA,eAAT,QAAgC,SAAhC;AAEA,OAAOC,QAAP,MAAqB,QAArB;;IAEqBC,sB;;;;;AACnB,kCAAYC,MAAZ,EAAoBC,UAApB,EAAgC;AAAA;;AAAA;;AAC9BA,IAAAA,UAAU,GAAGJ,eAAe,CAACG,MAAD,EAASC,UAAT,CAA5B;AACA,8BAAMD,MAAN,EAAcC,UAAU,CAACC,MAAzB,EAAiCF,MAAM,CAACG,OAAxC;AACA,UAAKF,UAAL,GAAkBA,UAAlB;AAH8B;AAI/B;;;;WAED,aAAIG,QAAJ,EAAcC,WAAd,EAA2BC,KAA3B,EAAkC;AAChC,WAAKN,MAAL,CAAYO,GAAZ,CAAgB,KAAKN,UAAL,CAAgBG,QAAhB,CAAhB,EAA2CC,WAA3C,EAAwDC,KAAxD;AACA,aAAO,IAAP;AACD;;;WAED,aAAIF,QAAJ,EAAcC,WAAd,EAA2B;AACzB,aAAO,KAAKL,MAAL,CAAYQ,GAAZ,CAAgB,KAAKP,UAAL,CAAgBG,QAAhB,CAAhB,EAA2CC,WAA3C,CAAP;AACD;;;;EAdiDP,Q;;SAA/BC,sB","sourcesContent":["import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}