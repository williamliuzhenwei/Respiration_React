{"ast":null,"code":"import _classCallCheck from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { checkColumnIndices } from '../util';\nimport BaseView from './base';\n\nvar MatrixColumnSelectionView = /*#__PURE__*/function (_BaseView) {\n  _inherits(MatrixColumnSelectionView, _BaseView);\n\n  var _super = _createSuper(MatrixColumnSelectionView);\n\n  function MatrixColumnSelectionView(matrix, columnIndices) {\n    var _this;\n\n    _classCallCheck(this, MatrixColumnSelectionView);\n\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    _this = _super.call(this, matrix, matrix.rows, columnIndices.length);\n    _this.columnIndices = columnIndices;\n    return _this;\n  }\n\n  _createClass(MatrixColumnSelectionView, [{\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, value) {\n      this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(rowIndex, columnIndex) {\n      return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n    }\n  }]);\n\n  return MatrixColumnSelectionView;\n}(BaseView);\n\nexport { MatrixColumnSelectionView as default };","map":{"version":3,"sources":["/Users/liuzhenwei/Desktop/Respiration_React/my-app/node_modules/ml-matrix/src/views/columnSelection.js"],"names":["checkColumnIndices","BaseView","MatrixColumnSelectionView","matrix","columnIndices","rows","length","rowIndex","columnIndex","value","set","get"],"mappings":";;;;AAAA,SAASA,kBAAT,QAAmC,SAAnC;AAEA,OAAOC,QAAP,MAAqB,QAArB;;IAEqBC,yB;;;;;AACnB,qCAAYC,MAAZ,EAAoBC,aAApB,EAAmC;AAAA;;AAAA;;AACjCA,IAAAA,aAAa,GAAGJ,kBAAkB,CAACG,MAAD,EAASC,aAAT,CAAlC;AACA,8BAAMD,MAAN,EAAcA,MAAM,CAACE,IAArB,EAA2BD,aAAa,CAACE,MAAzC;AACA,UAAKF,aAAL,GAAqBA,aAArB;AAHiC;AAIlC;;;;WAED,aAAIG,QAAJ,EAAcC,WAAd,EAA2BC,KAA3B,EAAkC;AAChC,WAAKN,MAAL,CAAYO,GAAZ,CAAgBH,QAAhB,EAA0B,KAAKH,aAAL,CAAmBI,WAAnB,CAA1B,EAA2DC,KAA3D;AACA,aAAO,IAAP;AACD;;;WAED,aAAIF,QAAJ,EAAcC,WAAd,EAA2B;AACzB,aAAO,KAAKL,MAAL,CAAYQ,GAAZ,CAAgBJ,QAAhB,EAA0B,KAAKH,aAAL,CAAmBI,WAAnB,CAA1B,CAAP;AACD;;;;EAdoDP,Q;;SAAlCC,yB","sourcesContent":["import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}